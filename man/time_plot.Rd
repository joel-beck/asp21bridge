% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnostic_plots.R
\name{time_plot}
\alias{time_plot}
\title{Plot values of a single Markov Chain over time}
\usage{
time_plot(samples, log = FALSE, robust = FALSE, latex = FALSE)
}
\arguments{
\item{samples}{Numeric vector, matrix with a single column or list
containing such a vector or matrix as the only element.}

\item{log}{Logical. If TRUE, the y - axis is transformed to the
logarithmic scale. \cr
Default: FALSE}

\item{robust}{Logical. If TRUE, the first and last percentile of the samples'
distribution are omitted to avoid a strong influence of
outliers on the y - axis scale. \cr
Default: FALSE}

\item{latex}{Logical. If TRUE, mathematical symbols such as greek letters
in the plot title with subscripts and superscripts are properly
rendered.
This option requires the column of the input matrix to be
labeled accordingly (as in the output of the \code{gibbs_sampler()}
function). \cr
Default: FALSE}
}
\value{
Plot object of the class "ggplot".
}
\description{
The \code{time_plot()} function creates a line graph of Markov Chain
samples, where the sampled values are mapped to the y - axis
and the iteration / index is placed on the x - axis in
chronological order. \cr
This type of plot is typically used to evaluate the convergence
of the chain, possibly towards a posterior distribution.
}
\examples{
fit <- lslm(
  location = y ~ x1 + x2 + z1 + z2, scale = ~ z1 + z2,
  data = toy_data, light = FALSE
) \%>\%
  gibbs_sampler(num_sim = 1000)

# list of 4 matrices with 1000 rows each
samples <- fit$mcmc_ridge$sampling_matrices

# extract first chain of the location parameter
diagnostic_plots(samples$location[, 1, drop = FALSE], latex = TRUE)

# log argument often useful for strictly positive variance parameters
time_plot(samples$scale_prior, log = TRUE, latex = TRUE)

}
